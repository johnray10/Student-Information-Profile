/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Model;

import static Model.Form_Student.ImgPath;
import java.awt.Dimension;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.RenderingHints;
import java.awt.Toolkit;
import java.awt.image.BufferedImage;
import java.io.ByteArrayInputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.InputStream;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import java.awt.event.KeyEvent;
import java.sql.CallableStatement;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import javafx.scene.Camera;
import javax.swing.UIManager;

/**
 *
 * @author JayJomJohn
 */
public class Form_StudentProfile extends javax.swing.JFrame {

    private String imgPath, gender;

    Connection conn;
    ResultSet rs;
    PreparedStatement pst;
    CallableStatement cst;

    public Form_StudentProfile() {
        initComponents();
        conn = Database.JavaConnector.ConnectDB();
        SetIcon();
        Disabled();
        showFrame();
        
    }

    private void showFrame() {
        Toolkit toolkit = getToolkit();
        Dimension size = toolkit.getScreenSize();
        setLocation(size.width / 2 - getWidth() / 2, size.height / 2 - getHeight() / 2);
    }

    private void Disabled() {
        txtLastName.setEnabled(false);
        txtGivenName.setEnabled(false);
        txtMiddleName.setEnabled(false);
        txtAge.setEnabled(false);
        txtAddress.setEnabled(false);
        dcDateOfBirth.setEnabled(false);
        radiobtnMale.setEnabled(false);
        radiobtnFemale.setEnabled(false);
        btnEdit.setEnabled(true);
        btnUpdate.setEnabled(false);
        btnDelete.setEnabled(false);
        btnCancel.setEnabled(false);
        btnBrowse.setEnabled(false);
        btnTakeAPicture.setEnabled(false);
        btnClose.setEnabled(true);
    }

    private void Enabled() {
        txtLastName.setEnabled(true);
        txtGivenName.setEnabled(true);
        txtMiddleName.setEnabled(true);
        txtAge.setEnabled(true);
        txtAddress.setEnabled(true);
        dcDateOfBirth.setEnabled(true);
        radiobtnMale.setEnabled(true);
        radiobtnFemale.setEnabled(true);
        btnClose.setEnabled(false);
        btnEdit.setEnabled(false);
        btnUpdate.setEnabled(true);
        btnDelete.setEnabled(true);
        btnCancel.setEnabled(true);
        btnBrowse.setEnabled(true);
        btnTakeAPicture.setEnabled(true);
        btnClose.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel = new javax.swing.JPanel();
        lblMiddleName = new javax.swing.JLabel();
        lblAge = new javax.swing.JLabel();
        btnCancel = new javax.swing.JButton();
        txtAge = new javax.swing.JTextField();
        btnEdit = new javax.swing.JButton();
        lblLastName = new javax.swing.JLabel();
        lblDateOfBirth = new javax.swing.JLabel();
        txtMiddleName = new javax.swing.JTextField();
        lblGender = new javax.swing.JLabel();
        lblAddress = new javax.swing.JLabel();
        txtAddress = new javax.swing.JTextField();
        radiobtnFemale = new javax.swing.JRadioButton();
        lblStudentId = new javax.swing.JLabel();
        lblGivenName = new javax.swing.JLabel();
        txtGivenName = new javax.swing.JTextField();
        txtStudentId = new javax.swing.JTextField();
        radiobtnMale = new javax.swing.JRadioButton();
        txtLastName = new javax.swing.JTextField();
        lblProfile = new javax.swing.JLabel();
        btnBrowse = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnClose = new javax.swing.JButton();
        lblTitle = new javax.swing.JLabel();
        btnTakeAPicture = new javax.swing.JButton();
        dcDateOfBirth = new com.toedter.calendar.JDateChooser();

        setAutoRequestFocus(false);
        setMaximumSize(new java.awt.Dimension(1300, 450));
        setMinimumSize(new java.awt.Dimension(1300, 450));
        setPreferredSize(new java.awt.Dimension(1300, 450));
        setResizable(false);
        setSize(new java.awt.Dimension(1300, 450));

        jPanel.setBackground(javax.swing.UIManager.getDefaults().getColor("Button.light"));
        jPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblMiddleName.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        lblMiddleName.setText("Middle Name");
        jPanel.add(lblMiddleName, new org.netbeans.lib.awtextra.AbsoluteConstraints(651, 170, -1, -1));

        lblAge.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        lblAge.setText("Age");
        jPanel.add(lblAge, new org.netbeans.lib.awtextra.AbsoluteConstraints(653, 216, -1, -1));

        btnCancel.setBackground(new java.awt.Color(219, 10, 91));
        btnCancel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnCancel.setForeground(java.awt.Color.white);
        btnCancel.setText("CANCEL");
        btnCancel.setBorderPainted(false);
        btnCancel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnCancel.setDefaultCapable(false);
        btnCancel.setFocusable(false);
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });
        jPanel.add(btnCancel, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 370, 94, 40));

        txtAge.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtAge.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtAge.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtAgeKeyTyped(evt);
            }
        });
        jPanel.add(txtAge, new org.netbeans.lib.awtextra.AbsoluteConstraints(685, 211, 102, -1));

        btnEdit.setBackground(new java.awt.Color(204, 204, 0));
        btnEdit.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnEdit.setForeground(java.awt.Color.white);
        btnEdit.setText("EDIT");
        btnEdit.setBorderPainted(false);
        btnEdit.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnEdit.setFocusable(false);
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });
        jPanel.add(btnEdit, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 370, 94, 40));

        lblLastName.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        lblLastName.setText("Last Name");
        jPanel.add(lblLastName, new org.netbeans.lib.awtextra.AbsoluteConstraints(67, 170, -1, -1));

        lblDateOfBirth.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        lblDateOfBirth.setText("Date of Birth");
        jPanel.add(lblDateOfBirth, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 216, -1, -1));

        txtMiddleName.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtMiddleName.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtMiddleName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtMiddleNameKeyTyped(evt);
            }
        });
        jPanel.add(txtMiddleName, new org.netbeans.lib.awtextra.AbsoluteConstraints(747, 165, 185, -1));

        lblGender.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        lblGender.setText("Gender");
        jPanel.add(lblGender, new org.netbeans.lib.awtextra.AbsoluteConstraints(95, 216, -1, -1));

        lblAddress.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        lblAddress.setText("Address");
        jPanel.add(lblAddress, new org.netbeans.lib.awtextra.AbsoluteConstraints(83, 264, -1, -1));

        txtAddress.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtAddress.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jPanel.add(txtAddress, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 259, 752, -1));

        radiobtnFemale.setBackground(javax.swing.UIManager.getDefaults().getColor("Button.light"));
        radiobtnFemale.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        radiobtnFemale.setText("Female");
        radiobtnFemale.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        radiobtnFemale.setFocusable(false);
        radiobtnFemale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radiobtnFemaleActionPerformed(evt);
            }
        });
        jPanel.add(radiobtnFemale, new org.netbeans.lib.awtextra.AbsoluteConstraints(227, 212, -1, -1));

        lblStudentId.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        lblStudentId.setText("Student ID");
        jPanel.add(lblStudentId, new org.netbeans.lib.awtextra.AbsoluteConstraints(65, 131, -1, -1));

        lblGivenName.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        lblGivenName.setText("Given Name");
        jPanel.add(lblGivenName, new org.netbeans.lib.awtextra.AbsoluteConstraints(354, 170, -1, -1));

        txtGivenName.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtGivenName.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtGivenName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtGivenNameKeyTyped(evt);
            }
        });
        jPanel.add(txtGivenName, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 165, 185, -1));

        txtStudentId.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtStudentId.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtStudentId.setAutoscrolls(false);
        txtStudentId.setEnabled(false);
        jPanel.add(txtStudentId, new org.netbeans.lib.awtextra.AbsoluteConstraints(151, 126, 185, -1));

        radiobtnMale.setBackground(javax.swing.UIManager.getDefaults().getColor("Button.light"));
        radiobtnMale.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        radiobtnMale.setText("Male");
        radiobtnMale.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        radiobtnMale.setFocusable(false);
        radiobtnMale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radiobtnMaleActionPerformed(evt);
            }
        });
        jPanel.add(radiobtnMale, new org.netbeans.lib.awtextra.AbsoluteConstraints(152, 212, -1, -1));

        txtLastName.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtLastName.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtLastName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtLastNameKeyTyped(evt);
            }
        });
        jPanel.add(txtLastName, new org.netbeans.lib.awtextra.AbsoluteConstraints(151, 165, 185, -1));

        lblProfile.setBackground(new java.awt.Color(103, 65, 114));
        lblProfile.setOpaque(true);
        jPanel.add(lblProfile, new org.netbeans.lib.awtextra.AbsoluteConstraints(1000, 90, 231, 176));

        btnBrowse.setBackground(new java.awt.Color(0, 51, 102));
        btnBrowse.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        btnBrowse.setForeground(java.awt.Color.white);
        btnBrowse.setText("BROWSE");
        btnBrowse.setBorderPainted(false);
        btnBrowse.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnBrowse.setFocusable(false);
        btnBrowse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBrowseActionPerformed(evt);
            }
        });
        jPanel.add(btnBrowse, new org.netbeans.lib.awtextra.AbsoluteConstraints(1000, 280, 103, 30));

        btnUpdate.setBackground(new java.awt.Color(0, 230, 64));
        btnUpdate.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnUpdate.setForeground(java.awt.Color.white);
        btnUpdate.setText("UPDATE");
        btnUpdate.setBorderPainted(false);
        btnUpdate.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnUpdate.setFocusable(false);
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });
        jPanel.add(btnUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 370, 94, 38));

        btnDelete.setBackground(new java.awt.Color(207, 0, 15));
        btnDelete.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnDelete.setForeground(java.awt.Color.white);
        btnDelete.setText("DELETE");
        btnDelete.setBorderPainted(false);
        btnDelete.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnDelete.setFocusable(false);
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });
        jPanel.add(btnDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 370, 94, 37));

        btnClose.setBackground(new java.awt.Color(0, 102, 102));
        btnClose.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnClose.setForeground(java.awt.Color.white);
        btnClose.setText("CLOSE");
        btnClose.setBorderPainted(false);
        btnClose.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnClose.setDefaultCapable(false);
        btnClose.setFocusPainted(false);
        btnClose.setFocusable(false);
        btnClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCloseActionPerformed(evt);
            }
        });
        jPanel.add(btnClose, new org.netbeans.lib.awtextra.AbsoluteConstraints(1110, 40, 122, 30));

        lblTitle.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        lblTitle.setText("STUDENT PROFILE");
        jPanel.add(lblTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(448, 43, -1, -1));

        btnTakeAPicture.setBackground(new java.awt.Color(102, 0, 102));
        btnTakeAPicture.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        btnTakeAPicture.setForeground(java.awt.Color.white);
        btnTakeAPicture.setText("TAKE A PICTURE");
        btnTakeAPicture.setBorderPainted(false);
        btnTakeAPicture.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnTakeAPicture.setFocusable(false);
        btnTakeAPicture.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTakeAPictureActionPerformed(evt);
            }
        });
        jPanel.add(btnTakeAPicture, new org.netbeans.lib.awtextra.AbsoluteConstraints(1110, 280, 118, 30));

        dcDateOfBirth.setBackground(java.awt.Color.white);
        dcDateOfBirth.setDateFormatString("yyyy-MM-dd");
        dcDateOfBirth.setFont(new java.awt.Font("Dialog", 0, 19)); // NOI18N
        jPanel.add(dcDateOfBirth, new org.netbeans.lib.awtextra.AbsoluteConstraints(427, 211, 196, 30));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        int P = JOptionPane.showConfirmDialog(null, " Are you sure want to cancel?", "ATTENTION", JOptionPane.YES_NO_OPTION);
        this.lblStudentId.requestFocus();
        if (P == JOptionPane.YES_OPTION) {
            try {
                pst = conn.prepareStatement("SELECT * FROM tbl_students WHERE Id=? ");
                pst.setString(1, txtStudentId.getText());
                rs = pst.executeQuery();
                if (rs.next()) {
                    txtStudentId.setText(rs.getInt(1) + "");
                    txtLastName.setText(rs.getString(2));
                    txtGivenName.setText(rs.getString(3));
                    txtMiddleName.setText(rs.getString(4));
                    String tempgender = (rs.getString(5));
                    if ("1".equals(tempgender)) {
                        radiobtnMale.setSelected(true);
                    } else if ("2".equals(tempgender)) {
                        radiobtnFemale.setSelected(true);
                    }
                    String pattern = "yyyy-MM-dd";
                    SimpleDateFormat simpleDateFormat = new SimpleDateFormat(pattern);
                    Date converted = simpleDateFormat.parse(rs.getString(6));
                    dcDateOfBirth.setDate(converted);
                    txtAge.setText(rs.getInt(7) + "");
                    txtAddress.setText(rs.getString(8));

                    byte[] imagedata = rs.getBytes("Photo");
                    ImageIcon format = new ImageIcon(scaledImage(imagedata, lblProfile.getWidth(), lblProfile.getHeight()));
                    lblProfile.setIcon(format);
                    Disabled();
                }
                rs.close();
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, ex);
            }
        }
    }//GEN-LAST:event_btnCancelActionPerformed
    private void txtAgeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAgeKeyTyped
        char c = evt.getKeyChar();
        if (!(Character.isDigit(c) || c == KeyEvent.VK_DELETE)) {
            evt.consume();
        }
        if (txtAge.getText().length() >= 2) {
            evt.consume();
        }
    }//GEN-LAST:event_txtAgeKeyTyped
    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        Enabled();
    }//GEN-LAST:event_btnEditActionPerformed
    private void txtMiddleNameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMiddleNameKeyTyped
        if (txtMiddleName.getText().length() >= 16) {
            evt.consume();
        }
    }//GEN-LAST:event_txtMiddleNameKeyTyped
    private void txtGivenNameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtGivenNameKeyTyped
        if (txtGivenName.getText().length() >= 16) {
            evt.consume();
        }
    }//GEN-LAST:event_txtGivenNameKeyTyped
    private void txtLastNameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtLastNameKeyTyped
        if (txtLastName.getText().length() >= 16) {
            evt.consume();
        }
    }//GEN-LAST:event_txtLastNameKeyTyped
    private void btnBrowseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBrowseActionPerformed
        JFileChooser file = new JFileChooser();
        file.setCurrentDirectory(new File(System.getProperty("user.home")));
        FileNameExtensionFilter filter = new FileNameExtensionFilter("*.image", "jpg", "png");
        file.addChoosableFileFilter(filter);
        int result = file.showSaveDialog(null);
        if (result == JFileChooser.APPROVE_OPTION) {
            File selectedFile = file.getSelectedFile();
            String path = selectedFile.getAbsolutePath();
            lblProfile.setIcon(ResizeImage(path, null));
            imgPath = path;
        } else {
            System.out.println("No File Selected");
        }
    }//GEN-LAST:event_btnBrowseActionPerformed
    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        if (txtLastName.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "No Last Name Found!", "ATTENTIOM", JOptionPane.ERROR_MESSAGE);
            txtLastName.requestFocus();
        } else if (txtGivenName.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "No Given Name Found!", "ATTENTION", JOptionPane.ERROR_MESSAGE);
            txtGivenName.requestFocus();
        } else if (txtMiddleName.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "No Middle Name Found!", "ATTENTION", JOptionPane.ERROR_MESSAGE);
            txtMiddleName.requestFocus();
        } else if (radiobtnMale.isSelected() == false && radiobtnFemale.isSelected() == false) {
            JOptionPane.showMessageDialog(this, "No Gender Found!", "ATTENTIOM", JOptionPane.ERROR_MESSAGE);
        } else if (dcDateOfBirth.getDate().equals("")) {
            JOptionPane.showMessageDialog(this, "No Date of Birth Found!", "ATTENTIOM", JOptionPane.ERROR_MESSAGE);
        } else if (txtAge.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "No Age Found!", "ATTENTION", JOptionPane.ERROR_MESSAGE);
            txtAge.requestFocus();
        } else if (txtAddress.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "No Address Found!", "ATTENTION", JOptionPane.ERROR_MESSAGE);
            txtAddress.requestFocus();
        } else {
            if (radiobtnMale.isSelected() == true) {
                gender = "1";
            } else if (radiobtnFemale.isSelected() == true) {
                gender = "2";
            }
            Updating();
        }
    }//GEN-LAST:event_btnUpdateActionPerformed
    private void Updating() {
        try {
            String holder = dcDateOfBirth.getDate().toString();
            DateFormat pattern = new SimpleDateFormat("E MMM dd HH:mm:ss z yyyy");
            Date myDate = pattern.parse(holder);
            java.sql.Date converted = new java.sql.Date(myDate.getTime());
            int P = JOptionPane.showConfirmDialog(null, "Are you sure want to update ?", "ATTENTION", JOptionPane.YES_NO_OPTION);
            if (P == JOptionPane.YES_OPTION) {
                if (imgPath != null) {
                    cst = conn.prepareCall("{call sp_UpdateExistingStudent(?, ?, ?, ?, ?, ?, ?, ?, ?)}");
                    cst.setString(1, txtLastName.getText());
                    cst.setString(2, txtGivenName.getText());
                    cst.setString(3, txtMiddleName.getText());
                    cst.setString(4, gender);
                    cst.setDate(5, converted);
                    cst.setString(6, txtAge.getText());
                    cst.setString(7, txtAddress.getText());
                    InputStream img = new FileInputStream(new File(imgPath));
                    cst.setBlob(8, img);
                    cst.setString(9, txtStudentId.getText());
                    if (cst.executeUpdate() == 1) {
                        JOptionPane.showMessageDialog(this, "Successfully Updated", "ATTENTION", JOptionPane.INFORMATION_MESSAGE);
                        Disabled();
                    }
                } else if (ImgPath == null) {
                    pst = conn.prepareStatement("UPDATE tbl_students SET Last_Name=?, Given_Name=?, Middle_Name=?, Gender_Id=?, Date_of_Birth=?, Age=?, Address=? WHERE Id=?");
                    pst.setString(1, txtLastName.getText());
                    pst.setString(2, txtGivenName.getText());
                    pst.setString(3, txtMiddleName.getText());
                    pst.setString(4, gender);
                    pst.setDate(5, converted);
                    pst.setString(6, txtAge.getText());
                    pst.setString(7, txtAddress.getText());
                    pst.setString(8, txtStudentId.getText());
                    if (pst.executeUpdate() == 1) {
                        JOptionPane.showMessageDialog(this, "Successfully Updated", "ATTENTION", JOptionPane.INFORMATION_MESSAGE);
                        Disabled();
                    }
                }
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex);
        }
    }
    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        int P = JOptionPane.showConfirmDialog(null, " Are you sure want to delete?", "ATTENTION", JOptionPane.YES_NO_OPTION);
        if (P == JOptionPane.YES_OPTION) //(P==0) //YES FOR 0 NO FOR 1
        {
            try {
                cst = conn.prepareCall("{call sp_DeleteExistingStudent(?)}");
                cst.setString(1, txtStudentId.getText());
                if (cst.executeUpdate() == 1) {
                    JOptionPane.showMessageDialog(this, "Successfully Deleted", "ATTENTION", JOptionPane.INFORMATION_MESSAGE);
                    this.dispose();
                }
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, ex);
            }
        }
    }//GEN-LAST:event_btnDeleteActionPerformed
    private void radiobtnMaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radiobtnMaleActionPerformed
        if (radiobtnMale.isSelected() == true) {
            gender = "1";
            radiobtnFemale.setSelected(false);
        }
    }//GEN-LAST:event_radiobtnMaleActionPerformed
    private void radiobtnFemaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radiobtnFemaleActionPerformed
        if (radiobtnFemale.isSelected() == true) {
            gender = "2";
            radiobtnMale.setSelected(false);
        }
    }//GEN-LAST:event_radiobtnFemaleActionPerformed
    private void btnCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCloseActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnCloseActionPerformed
    private void btnTakeAPictureActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTakeAPictureActionPerformed
        JFrame frame = this;
        frame.setEnabled(false);
        Form_Camera myform = new Form_Camera();
        myform.setVisible(true);
        myform.setLocationRelativeTo(this);
        myform.addWindowListener(new java.awt.event.WindowAdapter() {
            @Override
            public void windowClosed(java.awt.event.WindowEvent windowEvent) {
                frame.setEnabled(true);
            }
        });
    }//GEN-LAST:event_btnTakeAPictureActionPerformed

    public ImageIcon ResizeImage(String imagePath, byte[] pic) {
        ImageIcon myImage = null;
        if (imagePath != null) {
            myImage = new ImageIcon(imagePath);
        } else {
            myImage = new ImageIcon(pic);
        }
        Image img = myImage.getImage();
        Image newImg = img.getScaledInstance(lblProfile.getWidth(), lblProfile.getHeight(), Image.SCALE_SMOOTH);
        ImageIcon image = new ImageIcon(newImg);
        return image;
    }

    private Image scaledImage(byte[] img, int w, int h) {
        BufferedImage resizedImage = new BufferedImage(w, h, BufferedImage.TYPE_INT_RGB);
        try {
            Graphics2D g2 = resizedImage.createGraphics();
            g2.setRenderingHint(RenderingHints.KEY_INTERPOLATION, RenderingHints.VALUE_INTERPOLATION_BILINEAR);
            ByteArrayInputStream in = new ByteArrayInputStream(img);
            BufferedImage bImageFromConvert = ImageIO.read(in);
            g2.drawImage(bImageFromConvert, 0, 0, w, h, null);
            g2.dispose();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, e);
        }
        return resizedImage;
    }

    private void SetIcon() {
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/Image/job.png")));
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                /*if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }*/
                UIManager.setLookAndFeel("com.jtattoo.plaf.hifi.HiFiLookAndFeel");
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Form_StudentProfile.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Form_StudentProfile.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Form_StudentProfile.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Form_StudentProfile.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Form_StudentProfile().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBrowse;
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnClose;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnTakeAPicture;
    private javax.swing.JButton btnUpdate;
    public com.toedter.calendar.JDateChooser dcDateOfBirth;
    private javax.swing.JPanel jPanel;
    private javax.swing.JLabel lblAddress;
    private javax.swing.JLabel lblAge;
    private javax.swing.JLabel lblDateOfBirth;
    private javax.swing.JLabel lblGender;
    private javax.swing.JLabel lblGivenName;
    private javax.swing.JLabel lblLastName;
    private javax.swing.JLabel lblMiddleName;
    public javax.swing.JLabel lblProfile;
    private javax.swing.JLabel lblStudentId;
    private javax.swing.JLabel lblTitle;
    public javax.swing.JRadioButton radiobtnFemale;
    public javax.swing.JRadioButton radiobtnMale;
    public javax.swing.JTextField txtAddress;
    public javax.swing.JTextField txtAge;
    public javax.swing.JTextField txtGivenName;
    public javax.swing.JTextField txtLastName;
    public javax.swing.JTextField txtMiddleName;
    public javax.swing.JTextField txtStudentId;
    // End of variables declaration//GEN-END:variables

}
